/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.servicecontrol.v1.model;

/**
 * A visibility rule provides visibility configuration for an individual API element.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Service Control API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VisibilityRule extends com.google.api.client.json.GenericJson {

  /**
   * Controls whether visibility is enforced at runtime for requests to an API method. This setting
   * has meaning only when the selector applies to a method or an API.
   *
   * If true, requests without method visibility will receive a NOT_FOUND error, and any non-visible
   * fields will be scrubbed from the response messages. The default is determined by the value of
   * google.api.Visibility.enforce_runtime_visibility.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enforceRuntimeVisibility;

  /**
   * Lists the visibility labels for this rule. Any of the listed labels grants visibility to the
   * element.
   *
   * If a rule has multiple labels, removing one of the labels but not all of them can break
   * clients.
   *
   * Example:
   *
   *     visibility:       rules:       - selector: google.calendar.Calendar.EnhancedSearch
   * restriction: GOOGLE_INTERNAL, TRUSTED_TESTER
   *
   * Removing GOOGLE_INTERNAL from this restriction will break clients that rely on this method and
   * only had access to it through GOOGLE_INTERNAL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String restriction;

  /**
   * Selects methods, messages, fields, enums, etc. to which this rule applies.
   *
   * Refer to selector for syntax details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String selector;

  /**
   * Controls whether visibility is enforced at runtime for requests to an API method. This setting
   * has meaning only when the selector applies to a method or an API.
   *
   * If true, requests without method visibility will receive a NOT_FOUND error, and any non-visible
   * fields will be scrubbed from the response messages. The default is determined by the value of
   * google.api.Visibility.enforce_runtime_visibility.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnforceRuntimeVisibility() {
    return enforceRuntimeVisibility;
  }

  /**
   * Controls whether visibility is enforced at runtime for requests to an API method. This setting
   * has meaning only when the selector applies to a method or an API.
   *
   * If true, requests without method visibility will receive a NOT_FOUND error, and any non-visible
   * fields will be scrubbed from the response messages. The default is determined by the value of
   * google.api.Visibility.enforce_runtime_visibility.
   * @param enforceRuntimeVisibility enforceRuntimeVisibility or {@code null} for none
   */
  public VisibilityRule setEnforceRuntimeVisibility(java.lang.Boolean enforceRuntimeVisibility) {
    this.enforceRuntimeVisibility = enforceRuntimeVisibility;
    return this;
  }

  /**
   * Lists the visibility labels for this rule. Any of the listed labels grants visibility to the
   * element.
   *
   * If a rule has multiple labels, removing one of the labels but not all of them can break
   * clients.
   *
   * Example:
   *
   *     visibility:       rules:       - selector: google.calendar.Calendar.EnhancedSearch
   * restriction: GOOGLE_INTERNAL, TRUSTED_TESTER
   *
   * Removing GOOGLE_INTERNAL from this restriction will break clients that rely on this method and
   * only had access to it through GOOGLE_INTERNAL.
   * @return value or {@code null} for none
   */
  public java.lang.String getRestriction() {
    return restriction;
  }

  /**
   * Lists the visibility labels for this rule. Any of the listed labels grants visibility to the
   * element.
   *
   * If a rule has multiple labels, removing one of the labels but not all of them can break
   * clients.
   *
   * Example:
   *
   *     visibility:       rules:       - selector: google.calendar.Calendar.EnhancedSearch
   * restriction: GOOGLE_INTERNAL, TRUSTED_TESTER
   *
   * Removing GOOGLE_INTERNAL from this restriction will break clients that rely on this method and
   * only had access to it through GOOGLE_INTERNAL.
   * @param restriction restriction or {@code null} for none
   */
  public VisibilityRule setRestriction(java.lang.String restriction) {
    this.restriction = restriction;
    return this;
  }

  /**
   * Selects methods, messages, fields, enums, etc. to which this rule applies.
   *
   * Refer to selector for syntax details.
   * @return value or {@code null} for none
   */
  public java.lang.String getSelector() {
    return selector;
  }

  /**
   * Selects methods, messages, fields, enums, etc. to which this rule applies.
   *
   * Refer to selector for syntax details.
   * @param selector selector or {@code null} for none
   */
  public VisibilityRule setSelector(java.lang.String selector) {
    this.selector = selector;
    return this;
  }

  @Override
  public VisibilityRule set(String fieldName, Object value) {
    return (VisibilityRule) super.set(fieldName, value);
  }

  @Override
  public VisibilityRule clone() {
    return (VisibilityRule) super.clone();
  }

}
