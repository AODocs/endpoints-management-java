/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.servicecontrol.v1.model;

/**
 * Additional information about a potentially long running operation with which a log entry is
 * associated.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Service Control API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class LogEntryOperation extends com.google.api.client.json.GenericJson {

  /**
   * True for the first entry associated with `id`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean first;

  /**
   * An opaque identifier. A producer of log entries should ensure that `id` is only reused for
   * entries related to one operation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * True for the last entry associated with `id`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean last;

  /**
   * Ensures the operation can be uniquely identified. The combination of `id` and `producer` should
   * be made globally unique by filling `producer` with a value that disambiguates the service that
   * created `id`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String producer;

  /**
   * True for the first entry associated with `id`.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFirst() {
    return first;
  }

  /**
   * True for the first entry associated with `id`.
   * @param first first or {@code null} for none
   */
  public LogEntryOperation setFirst(java.lang.Boolean first) {
    this.first = first;
    return this;
  }

  /**
   * An opaque identifier. A producer of log entries should ensure that `id` is only reused for
   * entries related to one operation.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * An opaque identifier. A producer of log entries should ensure that `id` is only reused for
   * entries related to one operation.
   * @param id id or {@code null} for none
   */
  public LogEntryOperation setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * True for the last entry associated with `id`.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getLast() {
    return last;
  }

  /**
   * True for the last entry associated with `id`.
   * @param last last or {@code null} for none
   */
  public LogEntryOperation setLast(java.lang.Boolean last) {
    this.last = last;
    return this;
  }

  /**
   * Ensures the operation can be uniquely identified. The combination of `id` and `producer` should
   * be made globally unique by filling `producer` with a value that disambiguates the service that
   * created `id`.
   * @return value or {@code null} for none
   */
  public java.lang.String getProducer() {
    return producer;
  }

  /**
   * Ensures the operation can be uniquely identified. The combination of `id` and `producer` should
   * be made globally unique by filling `producer` with a value that disambiguates the service that
   * created `id`.
   * @param producer producer or {@code null} for none
   */
  public LogEntryOperation setProducer(java.lang.String producer) {
    this.producer = producer;
    return this;
  }

  @Override
  public LogEntryOperation set(String fieldName, Object value) {
    return (LogEntryOperation) super.set(fieldName, value);
  }

  @Override
  public LogEntryOperation clone() {
    return (LogEntryOperation) super.clone();
  }

}
