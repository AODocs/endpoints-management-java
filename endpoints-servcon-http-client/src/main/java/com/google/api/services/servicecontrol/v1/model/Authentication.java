/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.servicecontrol.v1.model;

/**
 * `Authentication` defines the authentication configuration for an API.
 *
 * Example for an API targeted for external use:
 *
 *     name: calendar.googleapis.com     authentication:       rules:       - selector: "*"
 * oauth:           canonical_scopes: https://www.googleapis.com/auth/calendar
 *
 *       - selector: google.calendar.Delegate         oauth:           canonical_scopes:
 * https://www.googleapis.com/auth/calendar.read
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Service Control API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Authentication extends com.google.api.client.json.GenericJson {

  /**
   * Defines a set of authentication providers that a service supports.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AuthProvider> providers;

  /**
   * Individual rules for authentication.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AuthenticationRule> rules;

  /**
   * Defines a set of authentication providers that a service supports.
   * @return value or {@code null} for none
   */
  public java.util.List<AuthProvider> getProviders() {
    return providers;
  }

  /**
   * Defines a set of authentication providers that a service supports.
   * @param providers providers or {@code null} for none
   */
  public Authentication setProviders(java.util.List<AuthProvider> providers) {
    this.providers = providers;
    return this;
  }

  /**
   * Individual rules for authentication.
   * @return value or {@code null} for none
   */
  public java.util.List<AuthenticationRule> getRules() {
    return rules;
  }

  /**
   * Individual rules for authentication.
   * @param rules rules or {@code null} for none
   */
  public Authentication setRules(java.util.List<AuthenticationRule> rules) {
    this.rules = rules;
    return this;
  }

  @Override
  public Authentication set(String fieldName, Object value) {
    return (Authentication) super.set(fieldName, value);
  }

  @Override
  public Authentication clone() {
    return (Authentication) super.clone();
  }

}
